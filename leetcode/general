Problems
=================

https://leetcode.com/problems/merge-intervals/
> array, sorting


https://leetcode.com/problems/remove-duplicate-letters/
> hashmap


https://leetcode.com/problems/intersection-of-two-arrays-ii/
> array, sorting, hashmap (one-approach)


https://leetcode.com/problems/3sum/
> array, set
> https://leetcode.com/problems/3sum/discuss/143636/Java-with-set


https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
//===============
public int maxProfit(int[] prices) {
        int maxProfit = 0, min = Integer.MAX_VALUE;
        for (int i = 0; i < prices.length; i++) {
            if (prices[i] < min) min = prices[i];
            else if (prices[i] > min) maxProfit = Math.max(prices[i] - min, maxProfit);
        }
        return maxProfit;
}
//===============


Kadane's Algorithm to Maximum Sum Subarray Problem
> https://www.youtube.com/watch?v=86CQq3pKSUw
> DP, array
